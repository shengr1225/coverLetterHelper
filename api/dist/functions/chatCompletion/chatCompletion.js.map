{
  "version": 3,
  "sources": ["../../../src/functions/chatCompletion/chatCompletion.ts"],
  "sourcesContent": ["import type { APIGatewayEvent, Context } from 'aws-lambda'\n\nimport { logger } from 'src/lib/logger'\nimport { chatCompletion } from 'src/lib/openai'\n\n/**\n * The handler function is your code that processes http request events.\n * You can use return and throw to send a response or error, respectively.\n *\n * Important: When deployed, a custom serverless function is an open API endpoint and\n * is your responsibility to secure appropriately.\n *\n * @see {@link https://redwoodjs.com/docs/serverless-functions#security-considerations|Serverless Function Considerations}\n * in the RedwoodJS documentation for more information.\n *\n * @typedef { import('aws-lambda').APIGatewayEvent } APIGatewayEvent\n * @typedef { import('aws-lambda').Context } Context\n * @param { APIGatewayEvent } event - an object which contains information from the invoker.\n * @param { Context } _context - contains information about the invocation,\n * function, and execution environment.\n */\nexport const handler = async (event: APIGatewayEvent, _context: Context) => {\n  logger.info(`${event.httpMethod} ${event.path}: chatCompletion function`)\n  let response\n  try {\n    response = await chatCompletion(event.body)\n  } catch (err) {\n    console.log(err)\n    return {\n      statusCode: 500,\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: err,\n    }\n  }\n\n  return {\n    statusCode: 200,\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: response.toReadableStream(),\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,oBAAe;AACf,oBAAuB;AAEvB,mBAAA;AAAA,MAAAA,eAgBuB,OAAOC,OAAwBC,aAAsB;AAC1EC,uBAAOC,KAAK,GAAGH,MAAMI,UAAU,IAAIJ,MAAMK,IAAI,2BAA2B;AACxE,MAAIC;AACJ,MAAI;AACFA,eAAW,UAAMC,8BAAeP,MAAMQ,IAAI;EAC5C,SAASC,KAAK;AACZC,YAAQC,IAAIF,GAAG;AACf,WAAO;MACLG,YAAY;MACZC,SAAS;QACP,gBAAgB;MAClB;MACAL,MAAMC;IACR;EACF;AAEA,SAAO;IACLG,YAAY;IACZC,SAAS;MACP,gBAAgB;IAClB;IACAL,MAAMF,SAASQ,iBAAiB;EAClC;AACF;AAvBO,MAAMC,UAAO,OAAAC,YAAAC,kBAAA;AAAA,QAAAC,wBAAAC,aAAAA,uBAAA,EAAAC,SAAA;AAAA,MAAAF,sBAAAG,QAAA;AAAA,eAAAF,aAAAA,uBAAA,EAAAG,IAAA,IAAAC,WAAAA,QAAA,GAAAxB,cAAAiB,YAAAC,aAAA;EAAA;AAAA,SAAAlB,aAAAiB,YAAAC,aAAA;AAAA;",
  "names": ["__rw_handler", "event", "_context", "logger", "info", "httpMethod", "path", "response", "chatCompletion", "body", "err", "console", "log", "statusCode", "headers", "toReadableStream", "handler", "__rw_event", "__rw__context", "__rw_contextStore", "__rw_getAsyncStoreInstance", "getStore", "undefined", "run", "_Map"]
}
