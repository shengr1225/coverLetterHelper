{
  "version": 3,
  "sources": ["../../../src/subscriptions/countdown/countdown.ts"],
  "sourcesContent": ["import gql from 'graphql-tag'\n\nimport { Repeater } from '@redwoodjs/realtime'\n\nimport { logger } from 'src/lib/logger'\n\nexport const schema = gql`\n  type Subscription {\n    countdown(from: Int!, interval: Int!): Int! @requireAuth\n  }\n`\n\n/**\n * To test this Countdown subscription, run the following in the GraphQL Playground:\n *\n * subscription CountdownFromInterval {\n *   countdown(from: 100, interval: 10)\n * }\n */\nconst countdown = {\n  countdown: {\n    subscribe: (\n      _,\n      {\n        from = 100,\n        interval = 10,\n      }: {\n        from: number\n        interval: number\n      }\n    ) =>\n      new Repeater((push, stop) => {\n        function decrement() {\n          from -= interval\n\n          if (from < 0) {\n            logger.debug({ from }, 'stopping as countdown is less than 0')\n            stop()\n          }\n\n          logger.debug({ from }, 'pushing countdown value ...')\n          push(from)\n        }\n\n        decrement()\n\n        const delay = setInterval(decrement, 500)\n\n        stop.then(() => {\n          clearInterval(delay)\n          logger.debug('stopping countdown')\n        })\n      }),\n    resolve: (payload: number) => payload,\n  },\n}\n\nexport default countdown\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,sBAAyB;AAEzB,oBAAe;AAER,MAAMA,SAAM;EAAA,QAAA;EAAA,eAAA,CAAA;IAAA,QAAA;IAAA,QAAA;MAAA,QAAA;MAAA,SAAA;IAAA;IAAA,cAAA,CAAA;IAAA,cAAA,CAAA;IAAA,UAAA,CAAA;MAAA,QAAA;MAAA,QAAA;QAAA,QAAA;QAAA,SAAA;MAAA;MAAA,aAAA,CAAA;QAAA,QAAA;QAAA,QAAA;UAAA,QAAA;UAAA,SAAA;QAAA;QAAA,QAAA;UAAA,QAAA;UAAA,QAAA;YAAA,QAAA;YAAA,QAAA;cAAA,QAAA;cAAA,SAAA;YAAA;UAAA;QAAA;QAAA,cAAA,CAAA;MAAA,GAAA;QAAA,QAAA;QAAA,QAAA;UAAA,QAAA;UAAA,SAAA;QAAA;QAAA,QAAA;UAAA,QAAA;UAAA,QAAA;YAAA,QAAA;YAAA,QAAA;cAAA,QAAA;cAAA,SAAA;YAAA;UAAA;QAAA;QAAA,cAAA,CAAA;MAAA,CAAA;MAAA,QAAA;QAAA,QAAA;QAAA,QAAA;UAAA,QAAA;UAAA,QAAA;YAAA,QAAA;YAAA,SAAA;UAAA;QAAA;MAAA;MAAA,cAAA,CAAA;QAAA,QAAA;QAAA,QAAA;UAAA,QAAA;UAAA,SAAA;QAAA;QAAA,aAAA,CAAA;MAAA,CAAA;IAAA,CAAA;EAAA,CAAA;EAAA,OAAA;IAAA,SAAA;IAAA,OAAA;IAAA,UAAA;MAAA,QAAA;MAAA,QAAA;MAAA,kBAAA;QAAA,QAAA;QAAA,UAAA;MAAA;IAAA;EAAA;AAAA;AAanB,MAAMC,YAAY;EAChBA,WAAW;IACTC,WAAWA,CACTC,GACA;MACEC,OAAO;MACPC,WAAW;IAIb,MAEA,IAAIC,yBAAS,CAACC,MAAMC,SAAS;AAC3B,eAASC,YAAY;AACnBL,gBAAQC;AAER,YAAID,OAAO,GAAG;AACZM,+BAAOC,MAAM;YAAEP;UAAK,GAAG,sCAAsC;AAC7DI,eAAK;QACP;AAEAE,6BAAOC,MAAM;UAAEP;QAAK,GAAG,6BAA6B;AACpDG,aAAKH,IAAI;MACX;AAEAK,gBAAU;AAEV,YAAMG,YAAQC,oBAAAA,SAAYJ,WAAW,GAAG;AAExCD,WAAKM,KAAK,MAAM;AACdC,sBAAcH,KAAK;AACnBF,6BAAOC,MAAM,oBAAoB;MACnC,CAAC;IACH,CAAC;IACHK,SAAUC,aAAoBA;EAChC;AACF;AAEA,IAAA,oBAAehB;",
  "names": ["schema", "countdown", "subscribe", "_", "from", "interval", "Repeater", "push", "stop", "decrement", "logger", "debug", "delay", "_setInterval", "then", "clearInterval", "resolve", "payload"]
}
